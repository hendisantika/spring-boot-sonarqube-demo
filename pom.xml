<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>id.my.hendisantika</groupId>
    <artifactId>sonarqube-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring-boot-sonarqube-demo</name>
    <description>spring-boot-sonarqube-demo</description>
    <properties>
        <java.version>21</java.version>
        <jacoco.version>0.8.13</jacoco.version>

        <sonar.dependencyCheck.basePath>${project.basedir}/owasp-dependency-check-logs</sonar.dependencyCheck.basePath>
        <sonar.dependencyCheck.htmlReportPath>${sonar.dependencyCheck.basePath}/dependency-check-report.html
        </sonar.dependencyCheck.htmlReportPath>
        <sonar.dependencyCheck.jsonReportPath>${sonar.dependencyCheck.basePath}/dependency-check-report.json
        </sonar.dependencyCheck.jsonReportPath>
        <sonar.dependencyCheck.summarize>true</sonar.dependencyCheck.summarize>
        <sonar.coverage.exclusions>**/controller/debug/**/*</sonar.coverage.exclusions>
        <sonar.exclusions>src/test/**/*</sonar.exclusions>
        <sonar.exclusions>**/schemas/**,**/config/**</sonar.exclusions>
        <sonar.coverage.exclusions>**/schemas/**,**/config/**</sonar.coverage.exclusions>
        <sonar.sources>src,pom.xml</sonar.sources>
        <sonar.test.inclusions>src/test/**/*</sonar.test.inclusions>
        <sonar.tests>src</sonar.tests>

        <spotless.version>2.44.5</spotless.version>
        <palantir.version>2.39.0</palantir.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.13</version>
        </dependency>

        <!-- VULNERABLE DEPENDENCY-->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20250517</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>5.1.0.4751</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.3</version> <!-- Use the latest version -->
            </plugin>
            <plugin>
                <groupId>com.rudikershaw.gitbuildhook</groupId>
                <artifactId>git-build-hook-maven-plugin</artifactId>
                <version>3.5.0</version>
                <configuration>
                    <installHooks>
                        <pre-commit>hooks/pre-commit</pre-commit>
                        <commit-msg>hooks/commit-msg</commit-msg>
                    </installHooks>
                    <gitConfig>
                        <!-- The location of the directory you are using to store the Git hooks in your project. -->
                        <core.hooksPath>githooks</core.hooksPath>
                        <!-- Some other project specific git config that you want to set. -->
                        <custom.configuration>true</custom.configuration>
                    </gitConfig>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <!-- Sets git config specified under configuration > gitConfig. -->
                            <goal>configure</goal>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
                <configuration>
                    <!--                    <ratchetFrom>origin/main</ratchetFrom>-->
                    <java>
                        <!-- Cleanthat will refactor your code, but it may break your style: apply it before your formatter -->
                        <cleanthat/>
                        <palantirJavaFormat>
                            <version>${palantir.version}</version>                     <!-- optional -->
                            <style>PALANTIR</style>                       <!-- or AOSP/GOOGLE (optional) -->
                            <formatJavadoc>false
                            </formatJavadoc>          <!-- defaults to false (optional, requires at least Palantir 2.39.0) -->
                        </palantirJavaFormat>
                        <formatAnnotations/>  <!-- fixes formatting of type annotations, see below -->
                        <includes>
                            <include>src/main/java/**/*.java</include>
                            <include>src/test/java/**/*.java</include>
                        </includes>
                        <importOrder/>
                        <removeUnusedImports/>
                        <toggleOffOn/>
                        <trimTrailingWhitespace/>
                        <endWithNewline/>
                        <indent>
                            <tabs>true</tabs>
                            <spacesPerTab>4</spacesPerTab>
                        </indent>
                        <googleJavaFormat/>
                    </java>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>sonarReports</id>

            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>12.1.3</version>

                        <configuration>
                            <mavenSettingsProxyId>https-p</mavenSettingsProxyId>
                            <outputDirectory>${sonar.dependencyCheck.basePath}</outputDirectory>

                            <formats>
                                <format>html</format>
                                <format>json</format>
                            </formats>
                        </configuration>

                        <executions>
                            <execution>
                                <id>generate-dependency-check-report</id>

                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
